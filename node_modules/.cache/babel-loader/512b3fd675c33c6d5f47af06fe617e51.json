{"ast":null,"code":"import _slicedToArray from \"C:/Users/rohit/Desktop/developerFolio-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Desktop\\\\developerFolio-master\\\\src\\\\containers\\\\blogs\\\\Blogs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./Blog.scss\";\nimport BlogCard from \"../../components/blogCard/BlogCard\";\nimport { blogSection } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Blogs() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(StyleContext),\n      isDark = _useContext.isDark;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      mediumBlogs = _useState2[0],\n      setMediumBlogs = _useState2[1];\n\n  function setMediumBlogsFunction(array) {\n    setMediumBlogs(array);\n  } //Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\n\n\n  function extractTextContent(html) {\n    return typeof html === \"string\" ? html.split(\"p>\").filter(function (el) {\n      return !el.includes(\">\");\n    }).map(function (el) {\n      return el.replace(\"</\", \".\").replace(\"<\", \"\");\n    }).join(\" \") : NaN;\n  }\n\n  useEffect(function () {\n    if (blogSection.displayMediumBlogs === \"true\") {\n      var getProfileData = function getProfileData() {\n        fetch(\"/blogs.json\").then(function (result) {\n          if (result.ok) {\n            return result.json();\n          }\n        }).then(function (response) {\n          setMediumBlogsFunction(response.items);\n        }).catch(function (error) {\n          console.error(\"\".concat(error, \" (because of this error Blogs section could not be displayed. Blogs section has reverted to default)\"));\n          setMediumBlogsFunction(\"Error\");\n          blogSection.displayMediumBlogs = \"false\";\n        });\n      };\n\n      getProfileData();\n    }\n  }, []);\n\n  if (!blogSection.display) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    bottom: true,\n    duration: 1000,\n    distance: \"20px\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      id: \"blogs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"blog-header-text\",\n          children: blogSection.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: isDark ? \"dark-mode blog-subtitle\" : \"subTitle blog-subtitle\",\n          children: blogSection.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-main-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-text-div\",\n          children: blogSection.displayMediumBlogs !== \"true\" || mediumBlogs === \"Error\" ? blogSection.blogs.map(function (blog, i) {\n            return /*#__PURE__*/_jsxDEV(BlogCard, {\n              isDark: isDark,\n              blog: {\n                url: blog.url,\n                image: blog.image,\n                title: blog.title,\n                description: blog.description\n              }\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, _this);\n          }) : mediumBlogs.map(function (blog, i) {\n            return /*#__PURE__*/_jsxDEV(BlogCard, {\n              isDark: isDark,\n              blog: {\n                url: blog.link,\n                title: blog.title,\n                description: extractTextContent(blog.content)\n              }\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blogs, \"YG8H31ig8IVD013kwNmkki538dE=\");\n\n_c = Blogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","useContext","BlogCard","blogSection","Fade","StyleContext","Blogs","isDark","mediumBlogs","setMediumBlogs","setMediumBlogsFunction","array","extractTextContent","html","split","filter","el","includes","map","replace","join","NaN","displayMediumBlogs","getProfileData","fetch","then","result","ok","json","response","items","catch","error","console","display","title","subtitle","blogs","blog","i","url","image","description","link","content"],"sources":["C:/Users/rohit/Desktop/developerFolio-master/src/containers/blogs/Blogs.js"],"sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport \"./Blog.scss\";\nimport BlogCard from \"../../components/blogCard/BlogCard\";\nimport {blogSection} from \"../../portfolio\";\nimport {Fade} from \"react-reveal\";\nimport StyleContext from \"../../contexts/StyleContext\";\nexport default function Blogs() {\n  const {isDark} = useContext(StyleContext);\n  const [mediumBlogs, setMediumBlogs] = useState([]);\n  function setMediumBlogsFunction(array) {\n    setMediumBlogs(array);\n  }\n  //Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\n  function extractTextContent(html) {\n    return typeof html === \"string\"\n      ? html\n          .split(\"p>\")\n          .filter(el => !el.includes(\">\"))\n          .map(el => el.replace(\"</\", \".\").replace(\"<\", \"\"))\n          .join(\" \")\n      : NaN;\n  }\n  useEffect(() => {\n    if (blogSection.displayMediumBlogs === \"true\") {\n      const getProfileData = () => {\n        fetch(\"/blogs.json\")\n          .then(result => {\n            if (result.ok) {\n              return result.json();\n            }\n          })\n          .then(response => {\n            setMediumBlogsFunction(response.items);\n          })\n          .catch(function (error) {\n            console.error(\n              `${error} (because of this error Blogs section could not be displayed. Blogs section has reverted to default)`\n            );\n            setMediumBlogsFunction(\"Error\");\n            blogSection.displayMediumBlogs = \"false\";\n          });\n      };\n      getProfileData();\n    }\n  }, []);\n  if (!blogSection.display) {\n    return null;\n  }\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"main\" id=\"blogs\">\n        <div className=\"blog-header\">\n          <h1 className=\"blog-header-text\">{blogSection.title}</h1>\n          <p\n            className={\n              isDark ? \"dark-mode blog-subtitle\" : \"subTitle blog-subtitle\"\n            }\n          >\n            {blogSection.subtitle}\n          </p>\n        </div>\n        <div className=\"blog-main-div\">\n          <div className=\"blog-text-div\">\n            {blogSection.displayMediumBlogs !== \"true\" ||\n            mediumBlogs === \"Error\"\n              ? blogSection.blogs.map((blog, i) => {\n                  return (\n                    <BlogCard\n                      key={i}\n                      isDark={isDark}\n                      blog={{\n                        url: blog.url,\n                        image: blog.image,\n                        title: blog.title,\n                        description: blog.description\n                      }}\n                    />\n                  );\n                })\n              : mediumBlogs.map((blog, i) => {\n                  return (\n                    <BlogCard\n                      key={i}\n                      isDark={isDark}\n                      blog={{\n                        url: blog.link,\n                        title: blog.title,\n                        description: extractTextContent(blog.content)\n                      }}\n                    />\n                  );\n                })}\n          </div>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
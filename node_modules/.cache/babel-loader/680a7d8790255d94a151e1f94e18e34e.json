{"ast":null,"code":"var createElement = require('react').createElement;\n\nvar pageProtocol = typeof location === 'undefined' ? '' : location.protocol === 'https:' ? 'https:' : 'http:';\nvar emojiStyle = {\n  height: '1em',\n  width: '1em',\n  margin: '0 .05em 0 .1em',\n  verticalAlign: '-0.1em'\n}; // Accept protocol with or without a colon\n\nfunction normalizeProtocol(protocol) {\n  if (protocol && protocol.length > 0 && protocol.charAt(protocol.length - 1) !== ':') {\n    return protocol + ':';\n  }\n\n  return protocol;\n}\n\nmodule.exports = function makeTwemojiRenderer(options) {\n  options = merge({\n    protocol: pageProtocol,\n    baseUrl: '//twemoji.maxcdn.com/2/',\n    size: '72x72',\n    ext: '.png',\n    props: null\n  }, options);\n  return function renderTwemoji(icon, match, offset) {\n    var src = '';\n\n    if (options.baseUrl.indexOf('http') !== 0) {\n      src += normalizeProtocol(options.protocol);\n    }\n\n    src += options.baseUrl + options.size + '/' + icon + options.ext;\n    return createElement('img', merge({\n      key: offset,\n      alt: match,\n      draggable: false,\n      src: src,\n      style: emojiStyle\n    }, options.props));\n  };\n};\n\nfunction merge() {\n  var out = {},\n      len = arguments.length;\n\n  for (var i = 0; i < len; ++i) {\n    var source = arguments[i];\n\n    if (source) {\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          out[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return out;\n}","map":{"version":3,"sources":["C:/Users/rohit/Desktop/rohitkumard/node_modules/react-easy-emoji/lib/makeTwemojiRenderer.js"],"names":["createElement","require","pageProtocol","location","protocol","emojiStyle","height","width","margin","verticalAlign","normalizeProtocol","length","charAt","module","exports","makeTwemojiRenderer","options","merge","baseUrl","size","ext","props","renderTwemoji","icon","match","offset","src","indexOf","key","alt","draggable","style","out","len","arguments","i","source","Object","prototype","hasOwnProperty","call"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBD,aAArC;;AAEA,IAAIE,YAAY,GAAI,OAAOC,QAAP,KAAoB,WAArB,GAAoC,EAApC,GAA2CA,QAAQ,CAACC,QAAT,KAAsB,QAAvB,GAAmC,QAAnC,GAA8C,OAA3G;AAEA,IAAIC,UAAU,GAAG;AAChBC,EAAAA,MAAM,EAAE,KADQ;AAEhBC,EAAAA,KAAK,EAAE,KAFS;AAGhBC,EAAAA,MAAM,EAAE,gBAHQ;AAIhBC,EAAAA,aAAa,EAAE;AAJC,CAAjB,C,CAOA;;AACA,SAASC,iBAAT,CAA2BN,QAA3B,EAAqC;AACpC,MAAIA,QAAQ,IAAIA,QAAQ,CAACO,MAAT,GAAkB,CAA9B,IAAmCP,QAAQ,CAACQ,MAAT,CAAgBR,QAAQ,CAACO,MAAT,GAAkB,CAAlC,MAAyC,GAAhF,EAAqF;AACpF,WAAOP,QAAQ,GAAG,GAAlB;AACA;;AACD,SAAOA,QAAP;AACA;;AAEDS,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACtDA,EAAAA,OAAO,GAAGC,KAAK,CAAC;AACfb,IAAAA,QAAQ,EAAEF,YADK;AAEfgB,IAAAA,OAAO,EAAE,yBAFM;AAGfC,IAAAA,IAAI,EAAE,OAHS;AAIfC,IAAAA,GAAG,EAAE,MAJU;AAKfC,IAAAA,KAAK,EAAE;AALQ,GAAD,EAMZL,OANY,CAAf;AAQA,SAAO,SAASM,aAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AACnD,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAIV,OAAO,CAACE,OAAR,CAAgBS,OAAhB,CAAwB,MAAxB,MAAoC,CAAxC,EAA2C;AAC1CD,MAAAA,GAAG,IAAIhB,iBAAiB,CAACM,OAAO,CAACZ,QAAT,CAAxB;AACA;;AAEDsB,IAAAA,GAAG,IAAIV,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,IAA1B,GAAiC,GAAjC,GAAuCI,IAAvC,GAA8CP,OAAO,CAACI,GAA7D;AAEA,WAAOpB,aAAa,CACnB,KADmB,EAEnBiB,KAAK,CAAC;AACLW,MAAAA,GAAG,EAAEH,MADA;AAELI,MAAAA,GAAG,EAAEL,KAFA;AAGLM,MAAAA,SAAS,EAAE,KAHN;AAILJ,MAAAA,GAAG,EAAEA,GAJA;AAKLK,MAAAA,KAAK,EAAE1B;AALF,KAAD,EAMFW,OAAO,CAACK,KANN,CAFc,CAApB;AAUA,GAlBD;AAmBA,CA5BD;;AA8BA,SAASJ,KAAT,GAAiB;AAChB,MAAIe,GAAG,GAAG,EAAV;AAAA,MAAcC,GAAG,GAAGC,SAAS,CAACvB,MAA9B;;AACA,OAAI,IAAIwB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAnB,EAAwB,EAAEE,CAA1B,EAA6B;AAC5B,QAAIC,MAAM,GAAGF,SAAS,CAACC,CAAD,CAAtB;;AACA,QAAIC,MAAJ,EAAY;AACX,WAAK,IAAIR,GAAT,IAAgBQ,MAAhB,EAAwB;AACvB,YAAIC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CR,GAA7C,CAAJ,EAAuD;AACtDI,UAAAA,GAAG,CAACJ,GAAD,CAAH,GAAWQ,MAAM,CAACR,GAAD,CAAjB;AACA;AACD;AACD;AACC;;AACD,SAAOI,GAAP;AACF","sourcesContent":["var createElement = require('react').createElement\n\nvar pageProtocol = (typeof location === 'undefined') ? '' : ((location.protocol === 'https:') ? 'https:' : 'http:')\n\nvar emojiStyle = {\n\theight: '1em',\n\twidth: '1em',\n\tmargin: '0 .05em 0 .1em',\n\tverticalAlign: '-0.1em'\n}\n\n// Accept protocol with or without a colon\nfunction normalizeProtocol(protocol) {\n\tif (protocol && protocol.length > 0 && protocol.charAt(protocol.length - 1) !== ':') {\n\t\treturn protocol + ':'\n\t}\n\treturn protocol\n}\n\nmodule.exports = function makeTwemojiRenderer(options) {\n\toptions = merge({\n\t\tprotocol: pageProtocol,\n\t\tbaseUrl: '//twemoji.maxcdn.com/2/',\n\t\tsize: '72x72',\n\t\text: '.png',\n\t\tprops: null\n\t}, options)\n\n\treturn function renderTwemoji (icon, match, offset) {\n\t\tvar src = ''\n\t\tif (options.baseUrl.indexOf('http') !== 0) {\n\t\t\tsrc += normalizeProtocol(options.protocol)\n\t\t}\n\n\t\tsrc += options.baseUrl + options.size + '/' + icon + options.ext\n\n\t\treturn createElement(\n\t\t\t'img',\n\t\t\tmerge({\n\t\t\t\tkey: offset,\n\t\t\t\talt: match,\n\t\t\t\tdraggable: false,\n\t\t\t\tsrc: src,\n\t\t\t\tstyle: emojiStyle\n\t\t\t}, options.props)\n\t\t)\n\t}\n}\n\nfunction merge() {\n\tvar out = {}, len = arguments.length\n\tfor(var i = 0; i < len; ++i) {\n\t\tvar source = arguments[i]\n\t\tif (source) {\n\t\t\tfor (var key in source) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\t\t\tout[key] = source[key]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n   }\n   return out\n}"]},"metadata":{},"sourceType":"script"}
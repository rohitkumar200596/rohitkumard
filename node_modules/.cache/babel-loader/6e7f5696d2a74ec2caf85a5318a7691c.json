{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rohit\\\\Desktop\\\\rohit portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Desktop\\\\rohit portfolio\\\\src\\\\containers\\\\Main.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport Greeting from \"./greeting/Greeting\";\nimport Skills from \"./skills/Skills\";\nimport StackProgress from \"./skillProgress/skillProgress\";\nimport Projects from \"./projects/Projects\";\nimport Footer from \"../components/footer/Footer\";\nimport Education from \"./education/Education\";\nimport ScrollToTopButton from \"./topbutton/Top\";\nimport Profile from \"./profile/Profile\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\nimport { splashScreen } from \"../portfolio\";\nimport { StyleProvider } from \"../contexts/StyleContext\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\n\nvar Main = function Main() {\n  var darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  var _useLocalStorage = useLocalStorage(\"isDark\", darkPref.matches),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      isDark = _useLocalStorage2[0],\n      setIsDark = _useLocalStorage2[1];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShowingSplashAnimation = _useState2[0],\n      setIsShowingSplashAnimation = _useState2[1];\n\n  useEffect(function () {\n    if (splashScreen.enabled) {\n      var splashTimer = setTimeout(function () {\n        return setIsShowingSplashAnimation(false);\n      }, splashScreen.duration);\n      return function () {\n        clearTimeout(splashTimer);\n      };\n    }\n  }, []);\n\n  var changeTheme = function changeTheme() {\n    setIsDark(!isDark);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isDark ? \"dark-mode\" : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyleProvider, {\n    value: {\n      isDark: isDark,\n      changeTheme: changeTheme\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, isShowingSplashAnimation && splashScreen.enabled ? /*#__PURE__*/React.createElement(SplashScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Greeting, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Skills, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StackProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Education, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Projects, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Profile, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ScrollToTopButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/rohit/Desktop/rohit portfolio/src/containers/Main.js"],"names":["React","useEffect","useState","Header","Greeting","Skills","StackProgress","Projects","Footer","Education","ScrollToTopButton","Profile","SplashScreen","splashScreen","StyleProvider","useLocalStorage","Main","darkPref","window","matchMedia","matches","isDark","setIsDark","isShowingSplashAnimation","setIsShowingSplashAnimation","enabled","splashTimer","setTimeout","duration","clearTimeout","changeTheme"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAAQC,eAAR,QAA8B,0BAA9B;AACA,OAAO,aAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAjB;;AADiB,yBAEWJ,eAAe,CAAC,QAAD,EAAWE,QAAQ,CAACG,OAApB,CAF1B;AAAA;AAAA,MAEVC,MAFU;AAAA,MAEFC,SAFE;;AAAA,kBAIfpB,QAAQ,CAAC,IAAD,CAJO;AAAA;AAAA,MAGVqB,wBAHU;AAAA,MAGgBC,2BAHhB;;AAMjBvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,YAAY,CAACY,OAAjB,EAA0B;AACxB,UAAMC,WAAW,GAAGC,UAAU,CAC5B;AAAA,eAAMH,2BAA2B,CAAC,KAAD,CAAjC;AAAA,OAD4B,EAE5BX,YAAY,CAACe,QAFe,CAA9B;AAIA,aAAO,YAAM;AACXC,QAAAA,YAAY,CAACH,WAAD,CAAZ;AACD,OAFD;AAGD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBR,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEA,MAAM,GAAG,WAAH,GAAiB,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAACA,MAAAA,MAAM,EAAEA,MAAT;AAAiBS,MAAAA,WAAW,EAAEA;AAA9B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,wBAAwB,IAAIV,YAAY,CAACY,OAAzC,gBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAJJ,CADF,CADF;AAqBD,CA3CD;;AA6CA,eAAeT,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Header from \"../components/header/Header\";\nimport Greeting from \"./greeting/Greeting\";\nimport Skills from \"./skills/Skills\";\nimport StackProgress from \"./skillProgress/skillProgress\";\nimport Projects from \"./projects/Projects\";\nimport Footer from \"../components/footer/Footer\";\nimport Education from \"./education/Education\";\nimport ScrollToTopButton from \"./topbutton/Top\";\nimport Profile from \"./profile/Profile\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\nimport {splashScreen} from \"../portfolio\";\nimport {StyleProvider} from \"../contexts/StyleContext\";\nimport {useLocalStorage} from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\n\nconst Main = () => {\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] =\n    useState(true);\n\n  useEffect(() => {\n    if (splashScreen.enabled) {\n      const splashTimer = setTimeout(\n        () => setIsShowingSplashAnimation(false),\n        splashScreen.duration\n      );\n      return () => {\n        clearTimeout(splashTimer);\n      };\n    }\n  }, []);\n\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <div className={isDark ? \"dark-mode\" : null}>\n      <StyleProvider value={{isDark: isDark, changeTheme: changeTheme}}>\n        {isShowingSplashAnimation && splashScreen.enabled ? (\n          <SplashScreen />\n        ) : (\n          <>\n            <Header />\n            <Greeting />\n            <Skills />\n            <StackProgress />\n            <Education />\n            <Projects />\n            <Profile />\n            <Footer />\n            <ScrollToTopButton />\n          </>\n        )}\n      </StyleProvider>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}